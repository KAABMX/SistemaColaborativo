/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.unam.ciencias.is.sistemacolaborativo.mapeobd;

import java.util.ArrayList;
import java.util.List;
import java.sql.Time;
import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

/**
 * Horario generated by hbm2java
 */
@Entity
@Table(name = "Horario")
public class Horario  implements Serializable {

    @Id@GeneratedValue(strategy =GenerationType.IDENTITY )
    @Column(name = "idHorario")
     private int idHorario;
    @ManyToOne()
    @LazyCollection(LazyCollectionOption.FALSE)
    @JoinColumn(name = "iddia")        
     private Dia iddia;
    @Column(name = "hora")     
     private Time hora;


    public Horario() {
    }


    public int getIdHorario() {
        return idHorario;
    }

    public void setIdHorario(int idHorario) {
        this.idHorario = idHorario;
    }

    public Dia getIddia() {
        return iddia;
    }

    public void setIddia(Dia iddia) {
        this.iddia = iddia;
    }

    public Time getHora() {
        return hora;
    }

    public void setHora(Time hora) {
        this.hora = hora;
    }

    public Boolean getDisponible() {
        return disponible;
    }

    public void setDisponible(Boolean disponible) {
        this.disponible = disponible;
    }

    public List<Asesorar> getAsesorar() {
        return asesorar;
    }

    public void setAsesorar(List<Asesorar> asesorar) {
        this.asesorar = asesorar;
    }
    @Column(name = "disponible")     
     private Boolean disponible;
    @OneToMany(mappedBy = "idhorario", fetch = FetchType.EAGER )    
     private List<Asesorar> asesorar =  new ArrayList<>();









}


